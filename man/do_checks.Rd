% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_checks.R
\name{do_checks}
\alias{do_checks}
\title{Apply all rules in checklist to a dataframe}
\usage{
do_checks(df_tocheck, checklist, aux_info, verbose = FALSE)
}
\arguments{
\item{df_tocheck}{a data.frame to check, like the included \code{fake_student_df}}

\item{checklist}{a tibble containing rule functions in \code{checker} column, as
well as \code{rule} and \code{activity_date} columns}

\item{aux_info}{list (or environment) with additional objects used by the checkers}

\item{verbose}{if TRUE, print additional information (currently only passed to
\code{verify_columns_present()})}
}
\value{
A tibble created by appending \code{status} and (for database checks) \code{activity_date}
and \code{age} columns for each rule in \code{checklist} to \code{df_tocheck}. The \code{status} column
reports "Pass" vs "Failure"/"Warning" (depending on the rule) for successfully
applied rules. For rules that were not applied successfully--either because of
an issue with the checker function itself or with the data being provided--the
\code{status} column instead records the error message generated by the attempt.
}
\description{
\code{do_checks()} is the primary high-level function for applying validation rules
to a given dataset. It returns \code{df_tocheck} with additional columns for each
rule in checklist, with slightly different behavior for Database checks, which
produce \code{status}, \code{activity_date} and \code{age} columns, versus USHE checks, which
only produce a \code{status} column.
}
\examples{
data(checklist) # Included tibble containing checker function expressions
data(aux_info) # Included list of auxiliary information for performing checks
data(fake_student_df) # Included dummy student dataset

# `checklist` arg should only have relevant checks for the dataset being checked
student_checks <- dplyr::filter(checklist, file == "Student", type == "Database")

# This runs all checks in `student_checks` on `fake_student_df`
student_check_res <- do_checks(fake_student_df, student_checks, aux_info)
dplyr::glimpse(student_check_res)


}
\seealso{
\link{checklist}, \link{aux_info}, which are included in utValidateR as data objects
}
